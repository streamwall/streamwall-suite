# Streamwall Ecosystem Environment Configuration
# =============================================
# 
# Quick Start:
# 1. Run ./setup-wizard.sh for interactive setup, OR
# 2. Copy this file to .env and run: docker compose up -d
#
# All default values are configured to work out-of-the-box with docker compose.
# The setup wizard will generate secure keys automatically.

# === Core Environment Settings ===
NODE_ENV=development
RAILS_ENV=development
TZ=UTC

# === Service Ports ===
# These ports are exposed on your host machine
STREAMSOURCE_PORT=3000          # StreamSource API (http://localhost:3000)
LIVESTREAM_MONITOR_PORT=3001    # Livestream monitor service
POSTGRES_PORT=5432              # PostgreSQL database
REDIS_PORT=6379                 # Redis cache/pubsub

# === Database Configuration ===
# These defaults work with the included docker-compose.yml
POSTGRES_USER=streamwall
POSTGRES_PASSWORD=streamwall_dev_password_change_in_production
POSTGRES_DB=streamwall_development

# === Redis Configuration ===
# Used for caching and ActionCable WebSocket connections
REDIS_URL=redis://redis:6379/0

# === StreamSource API Configuration ===
# The main database connection URL (constructed from above values)
DATABASE_URL=postgresql://streamwall:streamwall_dev_password_change_in_production@postgres:5432/streamwall_development

# IMPORTANT: These keys will be auto-generated by setup-wizard.sh
# For manual setup, generate with: openssl rand -hex 32
SECRET_KEY_BASE=development_secret_key_base_change_in_production_minimum_30_chars
JWT_SECRET=development_jwt_secret_change_in_production_minimum_30_chars
STREAMSOURCE_API_KEY=development_api_key_change_in_production_minimum_30_chars

# === Service URLs (for inter-service communication) ===
# These use Docker Compose service names for internal networking
STREAMSOURCE_API_URL=http://streamsource:3000/api/v1
STREAMSOURCE_INTERNAL_URL=http://streamsource:3000

# === Backend Configuration ===
# Default: All services use StreamSource API
BACKEND_TYPE=streamsource
BACKEND_MODE=single
BACKEND_PRIMARY=streamSource
BACKEND_STREAMSOURCE_ENABLED=true

# === Optional: Discord Bot Configuration ===
# To enable Discord monitoring, uncomment and fill these:
# DISCORD_TOKEN=your_discord_bot_token_here
# DISCORD_CHANNEL_ID=your_discord_channel_id_here
# DISCORD_COMMAND_PREFIX=!

# === Optional: Twitch Integration ===
# To monitor Twitch chat for stream links:
# TWITCH_CHANNEL=channel_name_without_hash
# TWITCH_USERNAME=your_twitch_bot_username
# TWITCH_OAUTH_TOKEN=oauth:your_token_here

# === Optional: Google Sheets Integration ===
# For Google Sheets sync (requires service account credentials)
# GOOGLE_SHEET_ID=your_google_sheet_id_here
# GOOGLE_CREDENTIALS_PATH=/app/creds.json
# GOOGLE_SHEET_UPDATE_INTERVAL=300000  # 5 minutes in milliseconds

# === Optional: Streamwall Desktop App ===
# Configuration for the Electron app (when run via Docker)
# STREAMWALL_WEB_PORT=8080
# STREAMWALL_ENABLE_DEV_TOOLS=false

# === Production Settings ===
# Uncomment these for production deployment:
# NODE_ENV=production
# RAILS_ENV=production
# RAILS_SERVE_STATIC_FILES=true
# RAILS_LOG_TO_STDOUT=true
# RAILS_LOG_LEVEL=info
# FORCE_SSL=true

# === Monitoring & Observability ===
# Optional: Enable application monitoring
# ENABLE_OTEL=false
# OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4318
# OTEL_SERVICE_NAME=streamwall-ecosystem

# === Development Tools ===
# These are helpful for debugging
RAILS_LOG_LEVEL=debug
ENABLE_QUERY_TRACE=false
VERBOSE_LOGGING=false